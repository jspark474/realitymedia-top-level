map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

upstream api {
    server 127.0.0.1:3001;
}

# HTTP - redirect all requests to HTTPS:
server {
    if ($host = realitymedia.digital) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80 default_server;
    server_name realitymedia.digital;

#    return 302 https://$host$request_uri;

#  location / {
#    proxy_set_header  X-Real-IP  $remote_addr;
#    proxy_set_header  Host       $http_host;
#    proxy_pass        http://127.0.0.1:3000;
#  }
}

server {
    listen 443 ssl;
    server_name realitymedia.digital;
    location / {
        proxy_set_header  X-Real-IP  $remote_addr;
        proxy_set_header  Host       $http_host;
        proxy_pass        https://127.0.0.1:3001;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_ignore_headers X-Accel-Expires Expires Cache-Control;
        proxy_ignore_headers Set-Cookie;
        proxy_hide_header Set-Cookie;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
        proxy_set_header X-NginX-Proxy true;
    }
    # Enable SSL
    ssl_certificate_key /etc/letsencrypt/live/realitymedia.digital/privkey.pem; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/realitymedia.digital/fullchain.pem; # managed by Certbot

    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

   # ssl_session_timeout 5m;
   # ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
   #  ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
   # ssl_prefer_server_ciphers on;

    # Managing requests to verify letsencrypt host
    #location ~ /.well-known {
    #    allow all;
    #}

}
